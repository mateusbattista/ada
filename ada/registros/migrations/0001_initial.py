# Generated by Django 4.1.7 on 2023-09-11 17:11

import comum.validators
from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('comum', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TipoEventoADA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nometipoevento', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'tipoevento_ada',
            },
        ),
        migrations.CreateModel(
            name='TipoPortariaADA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nometipoportaria', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'tipoportaria_ada',
            },
        ),
        migrations.CreateModel(
            name='TipoPublicoADA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nometipopublico', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'tipopublico_ada',
            },
        ),
        migrations.CreateModel(
            name='TermoAdesaoADA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(blank=True, max_length=100, null=True, verbose_name='Número')),
                ('ano', models.IntegerField(blank=True, null=True, verbose_name='ANO')),
                ('processosei', models.CharField(blank=True, max_length=100, null=True, verbose_name='PROCESSO SEI')),
                ('system_unit_id', models.IntegerField(blank=True, null=True)),
                ('tipo', models.CharField(blank=True, max_length=50, null=True, verbose_name='TIPO')),
                ('nomeprefeito', models.CharField(blank=True, max_length=100, null=True, verbose_name='NOME DO PREFEITO')),
                ('telefoneprefeito', models.CharField(blank=True, max_length=50, null=True, verbose_name='TELEFONE DO PREFEITO')),
                ('cpfprefeito', models.CharField(blank=True, max_length=20, null=True, verbose_name='CPF DO PREFEITO')),
                ('rgprefeito', models.CharField(blank=True, max_length=50, null=True, verbose_name='RG DO PREFEITO')),
                ('orgaorgprefeito', models.CharField(blank=True, max_length=50, null=True, verbose_name='ORGÃO DO RG')),
                ('ufrgprefeito', models.CharField(blank=True, max_length=2, null=True, verbose_name='UF')),
                ('cnpjprefeitura', models.CharField(blank=True, max_length=20, null=True, validators=[comum.validators.valida_cnpj], verbose_name='CNPJ')),
                ('situacao', models.CharField(blank=True, choices=[('SOLICITADO', 'SOLICITADO'), ('ACEITO (AGUARDANDO ASSINATURA SEI)', 'ACEITO (AGUARDANDO ASSINATURA SEI)'), ('ACEITO (AGUARDANDO PUBLICACAO NO D.O.U)', 'ACEITO (AGUARDANDO PUBLICACAO NO D.O.U)'), ('ADERIDO', 'ADERIDO'), ('NEGADO', 'NEGADO')], default='SOLICITADO', max_length=60, null=True, verbose_name='SITUAÇÃO')),
                ('datasolicitacao', models.DateTimeField(auto_now_add=True, null=True, verbose_name='DATA DA SOLICITAÇÃO')),
                ('datatermo', models.DateTimeField(blank=True, null=True, verbose_name='DATA DA SOLICITAÇÃO')),
                ('nome', models.CharField(blank=True, max_length=100, null=True, verbose_name='NOME')),
                ('ibge', models.CharField(blank=True, max_length=20, null=True, verbose_name='IBGE')),
                ('observacao', models.TextField()),
                ('cepprefeitura', models.CharField(blank=True, max_length=10, null=True, verbose_name='CEP DA PREFEITURA')),
                ('enderecoprefeitura', models.CharField(blank=True, max_length=100, null=True, verbose_name='ENDEREÇO DA PREFEITURA')),
                ('bairroprefeitura', models.CharField(blank=True, max_length=100, null=True, verbose_name='BAIRRO DA PREFEITURA')),
                ('numeroprefeitura', models.CharField(blank=True, max_length=100, null=True, verbose_name='NÚMERO DA PREFEITURA')),
                ('complementoprefeitura', models.CharField(blank=True, max_length=100, null=True, verbose_name='COMPLEMENTO DA PREFEITURA')),
                ('emailprefeitura', models.CharField(blank=True, max_length=150, null=True, verbose_name='E-MAIL DA PREFEITURA')),
                ('emailprefeito', models.CharField(blank=True, max_length=150, null=True, verbose_name='E-MAIL DO PREFEITO')),
                ('data_publicacao_dou', models.DateField(blank=True, null=True, verbose_name='DATA DA PUBLICAÇÃO DOU')),
                ('link_publicacao_dou', models.CharField(blank=True, max_length=200, null=True, verbose_name='LINK DA PUBLICAÇÃO DOU')),
                ('arquivoextrato', models.CharField(blank=True, max_length=100, null=True)),
                ('municipioprefeitura', models.CharField(blank=True, max_length=100, null=True)),
                ('quantidadecestas', models.BigIntegerField(blank=True, null=True, verbose_name='QUANTIDADE DE CESTAS')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='NOME DO SOLICITANTE')),
                ('emailsolicitante', models.CharField(blank=True, max_length=100, null=True, verbose_name='E-MAIL DO SOLICITANTE')),
                ('cpfsolicitante', models.CharField(blank=True, max_length=20, null=True, validators=[comum.validators.valida_cpf], verbose_name='CPF DO SOLICITANTE')),
                ('telefone1solicitante', models.CharField(blank=True, max_length=20, null=True, verbose_name='TELEFONE 2 DO SOLICITANTE ')),
                ('cepsolicitante', models.CharField(blank=True, max_length=10, null=True, verbose_name='TELEFONE 2 DO SOLICITANTE')),
                ('enderecosolicitante', models.CharField(blank=True, max_length=100, null=True, verbose_name='ENDEREÇO DO SOLICITANTE')),
                ('bairrosolicitante', models.CharField(blank=True, max_length=100, null=True, verbose_name='BAIRRO DO SOLICITANTE')),
                ('municipiosolicitante_id', models.BigIntegerField(blank=True, null=True, verbose_name='MUNICÍPIO')),
                ('funcao_gestor', models.CharField(blank=True, max_length=100, null=True, verbose_name='FUNÇÃO')),
                ('municipiounidade_id', models.BigIntegerField(blank=True, null=True, verbose_name='MUNICÍPIO')),
                ('numerosolicitante', models.CharField(blank=True, max_length=20, null=True, verbose_name='NÚMERO DO SOLICITANTE')),
                ('complementosolicitante', models.CharField(blank=True, max_length=50, null=True, verbose_name='COMPLEMENTO SOLICITANTE')),
                ('nomelocalarmazenamento', models.CharField(blank=True, max_length=100, null=True, verbose_name='NOME DO LOCAL DE ARMAZENAMENTO')),
                ('bairroarmazenamento', models.CharField(blank=True, max_length=100, null=True, verbose_name='BAIRRO DO LOCAL DE ARMAZENAMENTO')),
                ('numeroarmazenamento', models.CharField(blank=True, max_length=100, null=True, verbose_name='NÚMERO DO LOCAL DE ARMAZENAMENTO')),
                ('complementoarmazenamento', models.CharField(blank=True, max_length=100, null=True, verbose_name='COMPLEMENTO DO LOCAL DE ARMAZENAMENTO')),
                ('ceparmazenamento', models.CharField(blank=True, max_length=10, null=True, verbose_name='CEP DO LOCAL DE ARMAZENAMENTO')),
                ('nomemunicipioarmazenamento', models.CharField(blank=True, max_length=100, null=True, verbose_name='NOME DO MUNICÍPIO DO LOCAL DE ARMAZENAMENTO')),
                ('nomemunicipio', models.CharField(blank=True, max_length=100, null=True, verbose_name='NOME DO MUNICÍPIO')),
                ('municipioarmazenamento_id', models.BigIntegerField(blank=True, null=True)),
                ('nomelocalcontrolesocial', models.CharField(blank=True, max_length=100, null=True, verbose_name='NOME DO LOCAL DE CONTROLE SOCIAL')),
                ('bairrocontrolesocial', models.CharField(blank=True, max_length=100, null=True, verbose_name='BAIRRO DO CONTROLE SOCIAL')),
                ('numerocontrolesocial', models.CharField(blank=True, max_length=100, null=True, verbose_name='NÚMERO DO CONTROLE SOCIAL')),
                ('complementocontrolesocial', models.CharField(blank=True, max_length=100, null=True, verbose_name='COMPLEMENTO DO CONTROLE SOCIAL')),
                ('cepcontrolesocial', models.CharField(blank=True, max_length=10, null=True, verbose_name='CEP DO CONTROLE SOCIAL')),
                ('nomemunicipiocontrolesocial', models.CharField(blank=True, max_length=100, null=True, verbose_name='NOME DO MUNICÍPIO DO CONTROLE SOCIAL')),
                ('municipiocontrolesocial_id', models.BigIntegerField(blank=True, null=True)),
                ('telefone1controlesocial', models.CharField(blank=True, max_length=20, null=True, verbose_name='TELEFONE 1')),
                ('telefone2controlesocial', models.CharField(blank=True, max_length=20, null=True, verbose_name='TELEFONE 2')),
                ('emailcontrolesocial', models.CharField(blank=True, max_length=150, null=True, verbose_name='E-MAIL DO CONTROLE SOCIAL')),
                ('dirigentecontrolesocial', models.CharField(blank=True, max_length=150, null=True, verbose_name='DIRETOR DO CONTROLE SOCIAL')),
                ('enderecoarmazenamento', models.CharField(blank=True, max_length=100, null=True, verbose_name='ENDEREÇO DO LOCAL DE ARMAZENAMENTO')),
                ('enderecocontrolesocial', models.CharField(blank=True, max_length=100, null=True, verbose_name='ENDEREÇO DO LOCAL DO CONTROLE SOCIAL')),
                ('funcao', models.CharField(blank=True, max_length=100, null=True, verbose_name='FUNÇÃO')),
                ('ntermo', models.CharField(blank=True, choices=[('SIM', 'SIM'), ('NAO', 'NAO')], max_length=10, null=True)),
                ('arquivo', models.FileField(blank=True, upload_to='registros', verbose_name='ARQUIVO')),
                ('estado', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.estado')),
                ('evento_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='registros.tipoeventoada', verbose_name='EVENTO')),
                ('municipio', smart_selects.db_fields.ChainedForeignKey(blank=True, chained_field='estado', chained_model_field='estado', null=True, on_delete=django.db.models.deletion.CASCADE, to='comum.municipio')),
                ('portaria_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='registros.tipoportariaada', verbose_name='PORTARIA')),
                ('publico_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='registros.tipopublicoada', verbose_name='PÚBLICO')),
            ],
            options={
                'db_table': 'termoadesao_ada',
            },
        ),
        migrations.CreateModel(
            name='MetaADA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomemeta', models.CharField(max_length=50)),
                ('quantidade', models.BigIntegerField()),
                ('publico_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='registros.tipopublicoada')),
            ],
            options={
                'db_table': 'meta_ada',
            },
        ),
    ]
