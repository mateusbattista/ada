{"version":3,"file":"components/menu/menu.min.js","mappings":"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","sources":["webpack://core/webpack/universalModuleDefinition","webpack://core/./src/components/menu/menu.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"core\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory();\n\telse\n\t\troot[\"core\"] = factory();\n})(self, () => {\nreturn ","/** Classe para instanciar um objeto BRMenu*/\nclass BRMenu {\n  /**\n   * Instancia do objeto\n   * @param {string} name - Nome do componente em minúsculo\n   * @param {object} component - Objeto referenciando a raiz do componente DOM\n   */\n  constructor(name, component) {\n    this.name = name\n    this.component = component\n    this.id = this.component.id\n    this.breakpoints = this.component.dataset.breakpoints\n      ? this.component.dataset.breakpoints.split(' ')\n      : ['col-sm-4', 'col-lg-3']\n    this.pushShadow = 'shadow-lg-right'\n    this.trigger = document.querySelector(`[data-target=\"#${this.id}\"]`)\n    this.contextual = this.component.querySelector('[data-toggle=\"contextual\"]')\n    this.dismiss = this.component.querySelectorAll('[data-dismiss=\"menu\"]')\n    this.scrim = this.component.querySelector('.menu-scrim')\n    this.componentFolders = this.component.querySelectorAll('.menu-folder')\n    this.componentItems = this.component.querySelectorAll('.menu-item')\n    this._setBehavior()\n  }\n\n  /**\n   * Define comportamentos do componente\n   * @private\n   */\n  _setBehavior() {\n    this._toggleMenu()\n    this._setDropMenu()\n    this._setSideMenu()\n    this._setKeyboardBehaviors()\n    this._setBreakpoints()\n    this._setView()\n    window.addEventListener('resize', () => {\n      this._setView()\n    })\n  }\n\n  /**\n   * Define visual do componente\n   * @private\n   */\n  _setView() {\n    const template = document.querySelector('body')\n    const menuContextual = document.querySelector('.menu-trigger')\n    // const panel = document.querySelector('.menu-panel')\n    if (menuContextual && window.innerWidth < 992) {\n      template.classList.add('mb-5')\n    } else {\n      template.classList.remove('mb-5')\n    }\n  }\n\n  /**\n   * Define breakpoints do menu\n   * @private\n   */\n  _setBreakpoints() {\n    if (!this.component.classList.contains('push') && !this.contextual) {\n      this.component\n        .querySelector('.menu-panel')\n        .classList.add(...this.breakpoints)\n    }\n  }\n\n  /**\n   * Define ações do teclado\n   * @private\n   */\n  _setKeyboardBehaviors() {\n    // Fechar com tecla ESC\n    this.component.addEventListener('keyup', (event) => {\n      switch (event.code) {\n        case 'Escape':\n          this._closeMenu()\n        default:\n          break\n      }\n    })\n    // Fechar com Tab fora do menu\n    if (this.scrim) {\n      this.scrim.addEventListener('keyup', () => {\n        return this._closeMenu()\n      })\n    }\n  }\n\n  /**\n   * Define comportamentos de abrir/fechar menu\n   * @private\n   */\n  _toggleMenu() {\n    const trigger = this.contextual ? this.contextual : this.trigger\n    // Clicar no trigger\n    if (trigger) {\n      trigger.addEventListener('click', () => {\n        // Fechar Menu caso esteja aberto\n        if (this.component.classList.contains('active')) {\n          this._closeMenu()\n          return\n        }\n        // Abre Menu\n        this._openMenu()\n        this._focusNextElement()\n      })\n    }\n    // Clicar no dismiss\n    for (const close of this.dismiss) {\n      close.addEventListener('click', () => {\n        return this._closeMenu()\n      })\n    }\n  }\n\n  /**\n   * Define visual do menu aberto\n   * @private\n   */\n  _openMenu() {\n    this.component.classList.add('active')\n    if (this.component.classList.contains('push')) {\n      this.component.classList.add(...this.breakpoints, 'px-0')\n    }\n    this.component.focus()\n  }\n\n  /**\n   * Define visual do menu fechado\n   * @private\n   */\n  _closeMenu() {\n    this.component.classList.remove('active')\n    if (this.component.classList.contains('push')) {\n      this.component.classList.remove(...this.breakpoints, 'px-0')\n    }\n    this._focusNextElement()\n  }\n\n  /**\n   * Configura Drop Menu para filho imediato de \".menu-folder\"\n   * @private\n   */\n  _setDropMenu() {\n    for (const item of this.component.querySelectorAll(\n      '.menu-folder > a.menu-item'\n    )) {\n      // Inclui ícone de Drop Menu\n      this._createIcon(item, 'fa-chevron-down')\n      // Configura como Drop Menu\n      item.parentNode.classList.add('drop-menu')\n      // Inicializa Drop Menu\n      this._toggleDropMenu(item)\n    }\n  }\n\n  /**\n   * Foca no próximo elemento\n   * @private\n   */\n  _focusNextElement() {\n    //lista de elementos que desejamos focar\n    const focussableElements =\n      'a:not([disabled]), button:not([disabled]), input[type=text]:not([disabled]), [tabindex]:not([disabled]):not([tabindex=\"-1\"])'\n    if (document.activeElement) {\n      const focussable = Array.prototype.filter.call(\n        document.body.querySelectorAll(focussableElements),\n        (element) => {\n          // testa a visibilidade e inclui o elemento ativo\n          return (\n            element.offsetWidth > 0 ||\n            element.offsetHeight > 0 ||\n            element === document.activeElement\n          )\n        }\n      )\n      const index = focussable.indexOf(document.activeElement)\n      if (index > -1) {\n        const nextElement = focussable[index + 1] || focussable[0]\n        nextElement.focus()\n      }\n    }\n  }\n\n  /**\n   * Configura Side Menu para quem não for filho imediato de \".menu-folder\"\n   * @private\n   */\n  _setSideMenu() {\n    for (const ul of this.component.querySelectorAll('a.menu-item + ul')) {\n      if (!ul.parentNode.classList.contains('menu-folder')) {\n        // Inclui ícone de Side Menu\n        this._createIcon(ul.previousElementSibling, 'fa-angle-right')\n        // Configura como Side Menu\n        ul.parentNode.classList.add('side-menu')\n        // Inicializa Side Menu\n        this._toggleSideMenu(ul.previousElementSibling)\n      }\n    }\n  }\n\n  /**\n   * Muda estado do Drop Menu - aberto/fechado\n   * @private\n   * @param {object} element - referência ao Objeto que fará a ação\n   */\n  _toggleDropMenu(element) {\n    // Verifica se o elemento já possui click listener através de um atributo especial\n    if (!element.hasAttribute('data-click-listener')) {\n      element.addEventListener('click', () => {\n        // Fecha Drop Menu caso esteja aberto\n        if (element.parentNode.classList.contains('active')) {\n          element.parentNode.classList.remove('active')\n          return\n        }\n\n        // Abre Drop Menu\n        element.parentNode.classList.add('active')\n      })\n      // Adiciona atributo especial para indicar que o elemento já possui click listener\n      element.setAttribute('data-click-listener', 'true')\n    }\n  }\n\n  /**\n   * Muda estado do Side Menu - aberto/fechado\n   * @private\n   * @param {object} element - referência ao Objeto que fará a ação\n   */\n  _toggleSideMenu(element) {\n    // Verifica se o elemento já possui click listener através de um atributo especial\n    if (!element.hasAttribute('data-click-listener')) {\n      element.addEventListener('click', () => {\n        // Esconde todos os itens\n        this._hideItems(element)\n\n        // Mostra itens do Side Menu ativo\n        this._showItems(element.parentNode)\n\n        // Fecha Side Menu caso esteja aberto\n        if (element.parentNode.classList.contains('active')) {\n          this._closeSideMenu(element)\n          element.focus()\n          return\n        }\n\n        // Abre Side Menu\n        element.parentNode.classList.add('active')\n        element.focus()\n      })\n      // Adiciona atributo especial para indicar que o elemento já possui click listener\n      element.setAttribute('data-click-listener', 'true')\n    }\n  }\n\n  /**\n   * Fecha Side Menu\n   * @private\n   * @param {object} element - referência ao Objeto que fará a ação\n   */\n  _closeSideMenu(element) {\n    element.parentNode.classList.remove('active')\n    // Verifica se existe Side Menu anterior, caso contrário mostra todos os itens de volta\n    const parentFolder = element.parentNode.closest('.side-menu.active')\n      ? element.parentNode.closest('.side-menu.active')\n      : element.closest('.menu-body')\n    this._showItems(parentFolder)\n  }\n\n  /**\n   * Esconde os elementos proximos a referencia\n   * @private\n   * @param {object} element - referencia ao Objeto que fará a ação\n   */\n  _hideItems(element) {\n    for (const item of element\n      .closest('.menu-body')\n      .querySelectorAll('.menu-item')) {\n      item.setAttribute('hidden', '')\n    }\n  }\n\n  /**\n   * Mostra os elementos proximos a referencia\n   * @private\n   * @param {object} element - referência ao Objeto que fará a ação\n   */\n  _showItems(element) {\n    for (const item of element.querySelectorAll('.menu-item')) {\n      item.removeAttribute('hidden')\n    }\n  }\n\n  /**\n   * Cria icone filho a referencia\n   * @private\n   * @param {object} element - referência ao Objeto pai\n   * @param {string} icon - nome da classe font awesome do ícone\n   */\n  _createIcon(element, icon) {\n    // Verifica se já existe container para o ícone\n    if (!element.querySelectorAll('span.support').length) {\n      const menuIconContainer = document.createElement('span')\n      menuIconContainer.classList.add('support')\n\n      const menuIcon = document.createElement('i')\n      menuIcon.classList.add('fas')\n      menuIcon.classList.add(icon)\n      menuIcon.setAttribute('aria-hidden', 'true')\n\n      menuIconContainer.appendChild(menuIcon)\n      element.appendChild(menuIconContainer)\n    }\n  }\n}\n\nexport default BRMenu\n"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","BRMenu","constructor","name","component","this","id","breakpoints","dataset","split","pushShadow","trigger","document","querySelector","contextual","dismiss","querySelectorAll","scrim","componentFolders","componentItems","_setBehavior","_toggleMenu","_setDropMenu","_setSideMenu","_setKeyboardBehaviors","_setBreakpoints","_setView","window","addEventListener","template","menuContextual","innerWidth","classList","add","remove","contains","event","code","_closeMenu","_openMenu","_focusNextElement","close","focus","item","_createIcon","parentNode","_toggleDropMenu","focussableElements","activeElement","focussable","Array","prototype","filter","call","body","element","offsetWidth","offsetHeight","index","indexOf","nextElement","ul","previousElementSibling","_toggleSideMenu","hasAttribute","setAttribute","_hideItems","_showItems","_closeSideMenu","parentFolder","closest","removeAttribute","icon","length","menuIconContainer","createElement","menuIcon","appendChild"],"sourceRoot":""}